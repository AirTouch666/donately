name: Process Donation Issue

on:
  issues:
    types: [opened, edited]

jobs:
  process-donation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: output
          fetch-depth: 0
          
      - name: Get issue form data
        id: get-issue-data
        run: |
          # 获取原始 issue body
          RAW_BODY='${{ toJSON(github.event.issue.body) }}'
          echo "Raw issue body:"
          echo "$RAW_BODY"
          
          # 清理和准备 body 内容
          CLEAN_BODY=$(echo "$RAW_BODY" | sed -e 's/^"//' -e 's/"$//' -e 's/\\n/\n/g' -e 's/\\"/"/g')
          echo "Cleaned issue body:"
          echo "$CLEAN_BODY"
          
          # 使用强大的 awk 解析器提取字段值
          NAME=$(echo "$CLEAN_BODY" | awk -F'\n' '
            BEGIN { in_name = 0 }
            /^### name$/ { in_name = 1; next }
            in_name && !/^###/ && !/^$/ { print; in_name = 0 }
          ')
          
          AVATAR=$(echo "$CLEAN_BODY" | awk -F'\n' '
            BEGIN { in_avatar = 0 }
            /^### avatar$/ { in_avatar = 1; next }
            in_avatar && !/^###/ && !/^$/ { print; in_avatar = 0 }
          ')
          
          DATE=$(echo "$CLEAN_BODY" | awk -F'\n' '
            BEGIN { in_date = 0 }
            /^### date$/ { in_date = 1; next }
            in_date && !/^###/ && !/^$/ { print; in_date = 0 }
          ')
          
          MONEY=$(echo "$CLEAN_BODY" | awk -F'\n' '
            BEGIN { in_money = 0 }
            /^### money$/ { in_money = 1; next }
            in_money && !/^###/ && !/^$/ { print; in_money = 0 }
          ')
          
          # 修剪空白
          NAME=$(echo "$NAME" | xargs)
          AVATAR=$(echo "$AVATAR" | xargs)
          DATE=$(echo "$DATE" | xargs)
          MONEY=$(echo "$MONEY" | xargs)
          
          echo "Extracted values:"
          echo "Name: '$NAME'"
          echo "Avatar: '$AVATAR'"
          echo "Date: '$DATE'"
          echo "Money: '$MONEY'"
          
          # 验证必填字段
          if [ -z "$NAME" ] || [ -z "$DATE" ] || [ -z "$MONEY" ]; then
            echo "::error::Missing required fields (name, date or money)"
            exit 1
          fi
          
          # 创建 JSON 对象
          JSON_DATA=$(jq -n \
            --arg name "$NAME" \
            --arg avatar "$AVATAR" \
            --arg date "$DATE" \
            --arg money "$MONEY" \
            '{name: $name, avatar: $avatar, date: $date, money: $money}')
            
          echo "Generated JSON data: $JSON_DATA"
          echo "$JSON_DATA" > new-donation.json
          
      - name: Read existing donate.json
        id: read-donate
        run: |
          # 确保 existing.json 始终是有效的 JSON 数组
          if [ -f "donate.json" ]; then
            # 验证现有文件是否有效
            if jq -e '.' donate.json >/dev/null 2>&1; then
              jq '.' donate.json > existing.json
            else
              echo "Existing donate.json is invalid, resetting to empty array"
              echo "[]" > existing.json
            fi
          else
            echo "No existing donate.json, creating empty array"
            echo "[]" > existing.json
          fi
          
          # 打印现有数据用于调试
          echo "Existing donate.json content:"
          cat existing.json
          
      - name: Update donate.json
        run: |
          # 合并现有数据与新数据
          jq --slurp '.[0] + [.[1]]' existing.json new-donation.json > donate.json
          
          # 格式化 JSON
          jq '.' donate.json > temp.json && mv temp.json donate.json
          
          # 打印更新后的数据用于调试
          echo "Updated donate.json content:"
          cat donate.json
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add donate.json
          git commit -m "Add donation from issue #${{ github.event.issue.number }}"
          git push -f origin output
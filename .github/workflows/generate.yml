name: Process Donation Issue

on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  process-donation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: output
          
      - name: Get issue JSON data
        id: get-issue-data
        run: |
          # Extract JSON from issue body
          JSON_DATA=$(echo '${{ github.event.issue.body }}' | grep -oP '```json\n\K.*?(?=\n```)' || echo '')
          if [ -z "$JSON_DATA" ]; then
            echo "No valid JSON data found in issue"
            exit 1
          fi
          # Validate JSON
          echo "$JSON_DATA" | jq empty
          # Escape JSON for output
          ESCAPED_JSON=$(echo "$JSON_DATA" | jq -c '.' | sed 's/"/\\"/g')
          echo "json_data=$ESCAPED_JSON" >> $GITHUB_OUTPUT
          
      - name: Read existing donate.json
        id: read-donate
        run: |
          if [ -f "donate.json" ]; then
            EXISTING_DATA=$(cat donate.json | jq -c '.' | sed 's/"/\\"/g')
            echo "existing_data=$EXISTING_DATA" >> $GITHUB_OUTPUT
          else
            echo "existing_data=[]" >> $GITHUB_OUTPUT
          fi
          
      - name: Update donate.json
        run: |
          # Combine existing data with new data
          UPDATED_DATA=$(echo '${{ steps.read-donate.outputs.existing_data }}' | jq --argjson new "${{ steps.get-issue-data.outputs.json_data }}" '. += [$new]')
          echo "$UPDATED_DATA" > donate.json
          # Format JSON
          jq '.' donate.json > temp.json && mv temp.json donate.json
          
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add donate.json
          git commit -m "Add donation from issue #${{ github.event.issue.number }}"
          git push